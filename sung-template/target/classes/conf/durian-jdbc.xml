<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.2.xsd">
	
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="${driver}" />
		<property name="url" value="${url}" />
		<property name="username" value="${username}" />
		<property name="password" value="${password}" />
		<property name="minIdle" value="20" />
		<property name="maxIdle" value="30" />
		<property name="initialSize" value="10" />
		<property name="maxActive" value="50" />
		<property name="maxWait" value="120000"/>
		<property name="validationQuery" value="select 1 from dual" />
		<property name="validationQueryTimeout" value="2" />
		<property name="testOnBorrow" value="true" />
		<property name="testOnReturn" value="true" />
		<property name="testWhileIdle" value="true" />
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<property name="removeAbandoned" value="true" />
		<property name="removeAbandonedTimeout" value="30" />
		<property name="logAbandoned" value="true" />
		<property name="defaultAutoCommit" value="false"></property>
	</bean> 
	
	<!-- <bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean> 
	
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="*" propagation="REQUIRED" rollback-for="Exception"/>
			<tx:method name="get*" read-only="true" />
		</tx:attributes>
	</tx:advice>  -->

    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg index="0" ref="sqlSessionFactory"/>
        <constructor-arg index="1" value="BATCH"/>
    </bean>

   <!--  <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation" value="classpath:conf/oauth2Config.xml"/>
    </bean> -->
	
	<bean id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:conf/dbms-config.xml" />
		<!-- <property name="mapperLocations">
			<list>
				<value>classpath*:com.nssoft/**/*.xml</value>
			</list>
		</property> -->
		<property name="mapperLocations">
	        <array>
		        <value>classpath:com/nssoft/generator/mapper/xml/*.xml</value>
		        <value>classpath:com/nssoft/api/**/*.xml</value>
	      	</array>
    		</property>
	    <property name="typeAliasesPackage" value="com.nssoft.generator.model,com.nssoft.security.model"/>
	    <property name="plugins">
	      <array>
	        <bean class="com.github.pagehelper.PageHelper">
	          <property name="properties">
	            <value>
	              dialect=mysql
	              reasonable=true
	            </value>
	          </property>
	        </bean>
	        <bean class="tk.mybatis.mapper.mapperhelper.MapperInterceptor">
	          <property name="properties">
	            <value>
	                mappers=tk.mybatis.mapper.common.Mapper
	                IDENTITY=MYSQL
	                notEmpty=true
	            </value>
	          </property>
	        </bean>
	      </array>
	    </property>
	</bean> 
	
	<!-- <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.nssoft.security.dao"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean> -->
    
	<!-- <aop:config>
		<aop:advisor advice-ref="txAdvice" pointcut="target(com.neighborsystem.durian.restapi.api.IAPI)"/>
		<aop:advisor advice-ref="txAdvice" pointcut="target(com.neighborsystem.durian.task.ITask)"/>
	</aop:config> 
	 -->
	
	<!-- <bean id="dataSource"
		class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName" value="datasource1"/>
		<property name="resourceRef" value="false"/>
	</bean>  -->
</beans>
